prometheusOperator:
  nodeSelector:
    cloud.local/nodepool: infra-pool 
  tolerations:
   - key: node-role
     operator: Equal
     value: infra
     effect: NoSchedule

prometheus:
  enabled: true

  prometheusSpec:
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    nodeSelector:
      cloud.local/nodepool: infra-pool
    tolerations:  
     - key: node-role
       operator: Equal
       value: infra
       effect: NoSchedule

  serviceMonitorSelector:
    matchLabels:
      prometheus: default

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:	 
      - prometheus.192.168.150.240.nip.io
    pathType: ImplementationSpecific


kubeEtcd:
  enabled: false


kubeDns:
  enabled: true
 

kubeScheduler:
  enabled: false


coreDns:
  enabled: false


kubeControllerManager:
  enabled: false


grafana:
  enabled: true
  # namespaceOverride: "grafana"
  defaultDashboardsEnabled: true
  adminPassword: admin
  nodeSelector:
      cloud.local/nodepool: infra-pool
  tolerations:
   - key: node-role
     operator: Equal
     value: infra
     effect: NoSchedule

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    # labels: {}
    hosts:
      - grafana.192.168.150.240.nip.io
    path: /
    tls: []
    # - secretName: grafana-general-tls
    #   hosts:
    #   - grafana.192.168.150.240.nip.io
  persistence:
    type: pvc
    enabled: true
    storageClassName: nfs-client
    accessModes:
      - ReadWriteMany
    size: 5Gi
    # annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection
  

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      annotations: {}
      multicluster: false
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
    additionalDataSources:
      name: Loki
      type: Loki
      url: http://loki:3100/
      access: direct

alertmanager:
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - alertmanager.192.168.150.240.nip.io
    pathType: ImplementationSpecific
  alertmanagerSpec:
    nodeSelector:
      cloud.local/nodepool: infra-pool

#  config:
#    global:
#      slack_api_url: ''
#      resolve_timeout: 5m
#    route:
#      group_by: ["alertname","job"]
#      group_wait: 1s
#      group_interval: 5m
#      repeat_interval: 12h
#      receiver: "null"
#      routes:
#      - match_re:
#          alertname: Watchdog
#        receiver: "null"
#      - match_re:
#          severity: "warning|critical"
#        receiver: "slack"
  
#    receivers:
#    - name: "null"
#    - name: "slack"   
#      slack_configs:
#        - channel: "#stitrace"
#          send_resolved: true

